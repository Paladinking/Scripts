{
    "root": {
        "git": {
            "status": {
                "&FILE": null
            },
            "add": {
                "&FILE": null
            },
            "checkout": {
                "&branches": {
                    "&FILELIKE": null
                }
            },
            "branch": null,
            "commit": null,
            "clone": null,
            "diff": {
                "&FILE": {
                    "&FILE": null
                },
                "&branches": {
                    "&FILE": null
                }
            },
            "restore": {
                "&FILE": null
            },
            "reset": {
                "&FILE": null,
                "&branches": null
            }
        },
        "python": {
            "&FILE": null
        },
        "poetry": {
            "enter": null,
            "shell": null,
            "run": null
        },
        "path-add": {
            "&paths": null
        },
        "path-select": {
            "&FILE": null
        },
        "envir": {
            "list": {},
            "load": {
                "&envirs": {}
            },
            "save": {},
            "push": {},
            "pop": {}
        },
        "enter": {
            "windsond": {},
            "toolbox": {},
            "toebiters": {},
            "scripts": {}
        },
        "&FILE": {
            "&FILE": null
        },
        "&DEFAULT": {
            "&FILE": null
        }
    },
    "extern": {
        "&branches": {
            "cmd": "git for-each-ref --format=%(refname:short) refs/heads",
            "separator": "\n",
            "invalidation": "chdir"
        },
        "&envirs": {
            "cmd": "envir list -q",
            "separator": "\n",
            "invalidation": "always"
        },
        "&paths": {
            "cmd": "python -c \"import shutil, os.path, re ; print(','.join(set([c[1].lower() for c in [re.split('\\||<|>', a.strip(), 1) for a in open(os.path.join(os.path.split(shutil.which('path-add.exe'))[0], 'paths.txt')).readlines() if len(a.strip()) > 0] if len(c) > 1])), end='')\"",
            "separator": ",",
            "invalidation": "never"
        }
    },
    "options": {
        "rsearch": true,
        "autocmp": true,
        "history": true,
        "substitute": true
    },
    "description": [
        "&<extern> gives an extern command",
        "&FILE matches file that exists",
        "&FILELIKE matches anything file-like",
        "&DEFAULT matches anything",

        "For now, separator cannot be null",

        "invalidation values: chdir, always, never"
    ]
}
