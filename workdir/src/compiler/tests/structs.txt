

extern fn WriteFile(uint64 h, uint8* b, uint32 to_write, uint32* written, 
                    uint8* overlapped) -> bool;
extern fn GetStdHandle(uint32 n) -> uint64;

struct Y {
    uint64 n;
    X x;
    X[2] arr;
}

struct X {
    uint64 a;
    int64 b;
    uint16[12] arr;
}

fn take_x(X x) -> int64 {
    X x2 = x;

    return x2.a + x2.b;
}

fn main() -> uint64 {
    Y y;
    y.x.a = 123;
    y.x.b = 456;

    int64 c = take_x(y.x);

    X x1 = y.x;

    y.x;
    y.arr[1];

    Y y2;
    y2.x = y.x;

    y2.x.a = 25;

    y2.arr[1] = y2.x;

    X* ptr = &x1;
    (*ptr).a = (*ptr).a + 13;

    ptr = &y.x;
    *ptr = x1;

    Y[5] arr;
    arr[1];

    uint64 ix = 0;
    while (ix < 5) {
        arr[ix].arr[1].arr[6] = ix;

        ix = ix + 1;
    }
    uint8* msg = "1337 is the expected result\n";
    uint32 w;
    WriteFile(GetStdHandle(-11), msg, 27, &w, null);

    return arr[2].arr[1].arr[6] + arr[3].arr[1].arr[6] + 
        x1.a + y2.x.b + y2.arr[1].a + y.x.a + c;
}
